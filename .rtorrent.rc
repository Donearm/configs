# Maximum and minimum number of peers to connect to per torrent.
min_peers = 40
max_peers = 500

# Same as above but for seeding completed torrents (-1 = same as downloading)
min_peers_seed = 10
max_peers_seed = 100

# Maximum number of simultanious uploads per torrent.
max_uploads = 10

# Global upload and download rate in KiB. "0" for unlimited.
download_rate = 0
upload_rate = 3000

# Default directory to save the downloaded torrents.
directory = /media/private/torrents/

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = /media/private/torrent/session/

# Load torrents from watch directories and download in different locations
schedule = books,5,5,"load.start=/media/private/torrent/watch/books/*.torrent,directory.default.set=/media/private/torrents/Books/"
schedule = vids,5,5,"load.start=/media/private/torrent/watch/vids/*.torrent,directory.default.set=/media/private/torrents/Vids/"
schedule = music,5,5,"load.start=/media/private/torrent/watch/music/*.torrent,directory.default.set=/media/private/torrents/Music/"
schedule = others,5,5,"load.start=/media/private/torrent/watch/others/*.torrent,directory.default.set=/media/private/torrents/Others/"
schedule = untied_directory,5,5,stop_untied=

# Close torrents when diskspace is low.
#schedule = low_diskspace,5,60,close_low_diskspace=100M

# Stop torrents when reaching upload ratio in percent,
# when also reaching total upload in bytes, or when
# reaching final upload ratio in percent.
# example: stop at ratio 2.0 with at least 50 MB uploaded, or else ratio 20.0
#schedule = ratio,60,60,"stop_on_ratio=200,50M,200"

# Enable removal for all downloads added from this watch directory.
#schedule = watch_directory,10,10,"load_start=./watch/*.torrent,d.set_custom2=1"

# Clear custom2 when download completes.
#on_finished = set_done_var,d.set_custom2=

# Erase data files when a download is removed that still has custom2 set.
#on_erase = rm_files,"branch=d.get_custom2=,\"execute={rm,-rf,--,$d.get_base_path=}\""

ratio.enable=
ratio.min.set=150
ratio.max.set=300
ratio.upload.set=50M
# Changing the command triggered when the ratio is reached
method.set = group.seeding.ratio.command, d.close=

# copy completed torrents in the Music directory
method.set_key = event.download.finished,copy_complete,"execute=cp,-R,$d.get_base_path=/media/private/torrents/;d.set_directory=/media/private/Music/"

# Notify at torrent completion
method.set_key = event.download.finished,notify-me,"execute=notify-send,-t,7000,$d.get_name="

# The ip address reported to the tracker.
#ip = 127.0.0.1
#ip = driftavalii

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = 127.0.0.1
#bind = rakshasa.no

# Port range to use for listening.
#port_range = 6890-6999
port_range = 50000-50010

# Start opening ports at a random position within the port range.
port_random = yes

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
#check_hash = no

# Set whether the client should try to connect to UDP trackers.
trackers.use_udp.set = yes

# Alternative calls to bind and ip that should handle dynamic ip's.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
# encryption = allow_incoming,enable_retry,prefer_plaintext
encryption = allow_incoming,enable_retry,try_outgoing

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
dht = auto

# UDP port to use for DHT. 
# 
# dht_port = 6881
dht_port = 50009

# RPC port
scgi_port = 127.0.0.1:5000

#
# Do not modify the following parameters unless you know what you're doing.
#

# Hash read-ahead controls how many MB to request the kernel to read
# ahead. If the value is too low the disk may not be fully utilized,
# while if too high the kernel might not be able to keep the read
# pages in memory thus end up trashing.
#hash_read_ahead = 10

# Interval between attempts to check the hash, in milliseconds.
#hash_interval = 100

# Number of attempts to check the hash while using the mincore status,
# before forcing. Overworked systems might need lower values to get a
# decent hash checking rate.
#hash_max_tries = 10

#http_proxy="95.143.193.35:80"

network.http.ssl_verify_peer.set=0

encoding_list = UTF-8


# vim: set tw=0 cc=0 ft=cfg:
